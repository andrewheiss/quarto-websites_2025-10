{
  "hash": "6b20301c4f9d724995645761de3cb175",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Publishing\"\nformat:\n  revealjs:\n    theme: [simple, ../../css/slide-styles.scss, brand]\n    title-slide-attributes: \n      data-background-image: ../../img/background-hex-shapes.svg\n      data-background-opacity: \"0.5\"\n      data-background-gradient: \"linear-gradient(30deg, {{< brand color orange >}}, {{< brand color blue >}})\"\n      style: \"text-align: left; right: 10%\"\n      # data-background-color: \"{{< brand color blue >}}\"\n    include-in-header: \n      - text: |\n          <script>\n            if (window.location.search.includes('decktape=true')) {\n              document.documentElement.classList.add('decktape-export');\n            }\n          </script>\n---\n\n\n\n# The basics of<br>web hosting {background-color='{{< brand color orange >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}\n\n## Files are real\n\n![](img/verge-file-not-found.png)\n\n::: {.footer}\nMonica Chin, [\"File not found,\"](https://www.theverge.com/22684730/students-file-folder-directory-structure-education-gen-z) *The Verge*, September 22, 2021\n:::\n\n## Files live on computers\n\n![](img/files-teaching.png)\n\n## Websites are files\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n{{< fa file-code >}} **HTML**\n\n```{.html code-line-numbers=\"false\"}\n<!DOCTYPE html>\n<html>\n<head>\n  <title>Page title</title>\n</head>\n<body>\n  <h1>A heading</h1>\n  <p>Some text</p>\n</body>\n</html>\n```\n\n{{< fa brands css3-alt >}} **CSS**\n\n```{.css code-line-numbers=\"false\"}\nh1 {\n  color: \"red\";\n  text-align: center;\n  margin-bottom: 10px;\n}\n```\n\n:::\n\n::: {.column width=\"50%\"}\n\n{{< fa file-image >}} {{< fa file-video >}} {{< fa file-zipper >}} {{< fa file-pdf >}} {{< fa file >}} **Other files**\n\n\\ \n\n{{< fa brands square-js >}} **Javascript**\n\n```{.js code-line-numbers=\"false\"}\nconst listItems = document.querySelectorAll(\"li\");\n\nfunction toggleDone(e) {\n  if (!e.target.className) {\n    e.target.className = \"done\";\n  } else {\n    e.target.className = \"\";\n  }\n}\n\nlistItems.forEach((item) => {\n  item.addEventListener(\"click\", toggleDone);\n});\n```\n\n:::\n\n::::\n\n\n## (Some are databases + files)\n\n![](img/WordPress_6.4_Dashboard.png){fig-align=\"center\"}\n\n::: {.footer}\nBy WordPress Foundation - <span class=\"int-own-work\" lang=\"en\">Own work</span>, <a href=\"http://www.gnu.org/licenses/gpl.html\" title=\"GNU General Public License\">GPL</a>, <a href=\"https://commons.wikimedia.org/w/index.php?curid=146718522\">Link</a>\n:::\n\n## Quarto websites are *static*\n\nThere's no need for fancy web servers—<br>Quarto puts the whole rendered website in `_site/`\n\n![](img/static-folder.png){fig-align=\"center\"}\n\n. . . \n\n**Your job is to put that `_site/` on a server.**\n\n## Servers {.nostretch}\n\nWeb servers are computers that (1) store files and (2) show those files as websites to web browsers.\n\n. . .\n\n![](img/there-is-no-cloud.png){fig-align=\"center\" width=\"45%\"}\n\n## Local files {.nostretch}\n\n::: {style=\"text-align: center;\"}\n`file:///Users/andrew/Desktop/example/index.html`\n:::\n\n![](img/file-server.svg){fig-align=\"center\" width=\"70%\"}\n\n## Local files\n\n![](img/preview-file.png){fig-align=\"center\" style=\"box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 15px;\"}\n\n## Local server {.nostretch}\n\n::: {style=\"text-align: center;\"}\n`http://localhost:3333/`\n:::\n\n![](img/local-server.svg){fig-align=\"center\" width=\"70%\"}\n\n## Local server\n\n![](img/preview-server.png){fig-align=\"center\" style=\"box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 15px;\"}\n\n## {.nostretch .center}\n\n![](img/stephen-a-smith-take-a-look.jpg){fig-align=\"center\" width=\"70%\"}\n\n## Local server {.nostretch}\n\n![](img/local-server.svg){fig-align=\"center\" width=\"70%\"}\n\n## Remote server\n\n![](img/remote-server.svg){fig-align=\"center\"}\n\n## Remote server\n\n![](img/preview-live.png){fig-align=\"center\" style=\"box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 15px;\"}\n\n## Domain names\n\nAll computers on the internet have IP addresses\n\n::: {style=\"text-align: center; font-size: 1.4em; margin: 2em 0;\"}\n<http://8.8.8.8>\n:::\n\n. . . \n\nDomain names map IP addresses to memorable, human-readable names\n\n## Domain names\n\n![](img/remote-server-dns.svg){fig-align=\"center\"}\n\n::: {.notes}\nThese icons all come from The Noun Project\n\n- [Laptop by Sunardi](https://thenounproject.com/icon/laptop-5595817/)\n- [Server by Sunardi](https://thenounproject.com/icon/database-5595810/)\n- [Cloud server by Sunardi](https://thenounproject.com/icon/cloud-server-5595809/)\n- [Global website by Yoyon Pujiyono](https://thenounproject.com/icon/global-website-3190998/)\n- [Document folder by Ifanicon](https://thenounproject.com/icon/document-folder-4919991/)\n:::\n\n## Costs\n\n:::: {.columns}\n\n::: {.column width=50% .fragment}\n\n**Server space**\n\nCan be free!\n\nTypically \\$5+/month\n\n:::\n\n::: {.column width=\"50%\" .fragment}\n\n**Domain name**\n\nNot free!\n\n\\$10–20+/year\n\n![](img/iwantmyname.png){width=\"80%\"}\n\n:::\n\n::::\n\n\n# Quarto<br>hosting options {background-color='{{< brand color orange >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}\n\n## Deployment services\n\nQuarto has built-in support for several different hosting services for publshing documents, presentations, dashboards, and websites\n\n![](img/quarto-publishing-documentation.png){fig-align=\"center\" style=\"box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;\"}\n\n::: {.footer}\n<https://quarto.org/docs/publishing/>\n:::\n\n## {style=\"font-size: 0.92em\"}\n\n#### Easy\n\n- **Quarto Pub**: Free!; everything's public; no custom domains\n- **Posit Connect**: \\$\\$; public and private; custom domains\n\n#### Medium\n\n- **GitHub Pages**: Free!; everything's public; custom domains\n- **Netlify**: Free and paid; public and private; custom domains\n\n#### Advanced\n\n- **DIY**: Set up a server yourself and do whatever you want\n\n\n## What I use\n\n- **Quarto Pub**: [example](https://andrewheiss.quarto.pub/escaping-inline-r-chunks/) + [example](https://andrewheiss.quarto.pub/arnova-2025-proposal/)\n- **GitHub Pages**: [example](https://profmusgrave.github.io/qatarcars/) + [example](https://foreignassistance.andrewheiss.com/) + this very course website!\n- **DIY**: [example](https://www.andrewheiss.com/) + [example](https://stats.andrewheiss.com/silent-skywalk/)\n\n\n## What we'll do together\n\n- **Quarto Pub**\n- **GitHub Pages**\n\n\n# Deploying with<br>Quarto Pub {background-color='{{< brand color orange >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}\n\n## Quarto Pub\n\n::: {style=\"text-align: center; font-size: 1.4em; margin: 0.5em 0;\"}\n<https://quartopub.com/>\n:::\n\n::: {.incremental}\n\n- **What**: Free hosting service for all types of Quarto documents, run by Posit\n\n- **When to use**: When you want to publish something on the internet quickly and you don't really care about (1) privacy or (2) the domain name\n\n- **Difficulty level**: The easiest!\n\n:::\n\n. . .\n\n::: {style=\"text-align: center; font-size: 0.8em;\"}\n[Complete documentation](https://quarto.org/docs/publishing/quarto-pub.html)\n:::\n\n## {.center}\n\n![](img/quarto-pub-dashboard.png){fig-align=\"center\" style=\"box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;\"}\n\n## How to publish\n\n::: {.incremental}\n\n1. Go to [quartopub.com](https://quartopub.com/) and create a free account. Make sure you're logged in.\n\n2. In the terminal, run this:\n\n   ```{.bash filename=\"Terminal\" code-line-numbers=\"false\"}\n   quarto publish\n   ```\n\n3. Select `Quarto Pub` and press enter. Answer all the other questions.\n\n4. Wait for the site to render and upload.\n\n\n\n5. Done!\n\n:::\n\n## Other details\n\n- To update the site later, run `quarto publish` in the terminal again.\n\n- Manage other site settings at your [quartopub.com](https://quartopub.com/) dashboard.\n\n\n## Your turn {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}\n\nPublish your playground website to Quarto Pub.\n\n1. Go to [quartopub.com](https://quartopub.com/) and create a free account. Make sure you're logged in.\n\n2. In the terminal, run this:\n\n   ```{.bash filename=\"Terminal\" code-line-numbers=\"false\"}\n   quarto publish\n   ```\n\n3. Select `Quarto Pub` and press enter. Answer all the other questions.\n\n4. Wait for the site to render and upload.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_0fe547ab\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">07</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# Deploying with<br>GitHub Pages {background-color='{{< brand color orange >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}\n\n## GitHub Pages\n\n::: {.incremental}\n\n- **What**: Free hosting service for repositories hosted on GitHub\n\n- **When to use**: When you want a (free) longer term hosting solution (with a custom domain if you want) and you're already using GitHub for version control\n\n- **Difficulty level**: Medium\n\n:::\n\n. . .\n\n::: {style=\"text-align: center; font-size: 0.8em;\"}\n[Complete documentation](https://quarto.org/docs/publishing/github-pages.html)\n:::\n\n## Three ways; three difficulties\n\n::: {.incremental}\n1. **Easy**: Render your site to `docs/` and include that folder in your git repository.\n\n2. **Medium**: Use the `quarto publish` terminal command to render the site and push it to a `gh-pages` branch.\n\n3. **Hard**: Use GitHub Actions to build an on-the-fly virtual computer that remotely rebuilds and publishes your site every time you commit to your repository.\n:::\n\n. . .\n\n**We're going to do Option 1!**\n\n## Some git knowledge required\n\n::::: {.columns}\n:::: {.column .fragment style=\"text-align: center;\"}\n\n::: {style=\"font-size: 2em;\"}\n{{< fa brands square-git >}}\n:::\n\nGeneral version control\n\n::::\n\n:::: {.column .fragment style=\"text-align: center;\"}\n\n::: {style=\"font-size: 2em;\"}\n{{< fa brands github >}}\n:::\n\nRemote version control hosting + collaboration\n\n::::\n:::::\n\n. . .\n\n**Helpful resources:**\n\n- [GitHub's Hello World tutorial](https://docs.github.com/en/get-started/start-your-journey/hello-world)\n- [Happy Git with R](https://happygitwithr.com/)\n\n\n## Interacting with git {.smaller}\n\n::: {.panel-tabset}\n### GitHub Desktop\n\n![](img/github-desktop.png){fig-align=\"center\" width=\"70%\"}\n\n### RStudio\n\n![](img/rstudio-git.png){fig-align=\"center\" width=\"90%\" style=\"box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;\"}\n\n### Positron&thinsp;/&thinsp;VS Code\n\n![](img/positron-git.png){fig-align=\"center\" width=\"90%\"}\n\n### Terminal\n\n```{.bash filename=\"Terminal\" code-line-numbers=\"false\"}\ngit add new-file.qmd\ngit commit -m \"New file added\"\ngit push origin main\n```\n\n:::\n\n## Basic workflow\n\n::: {.incremental}\n1. Make changes\n\n2. Commit changes to lock them in\n\n3. Push commits to remote server\n:::\n\n. . .\n\n::: {style=\"font-size: 0.8em;\"}\n*Advanced stuff you don't have to worry about*: branches, collaboration, pull requests, etc.\n:::\n\n\n## `.gitignore`\n\nUse `.gitignore` to hide things from git.\n\n. . .\n\n::: {.callout-tip}\n### General rules\n\n**Commit things that make outputs; don't commit outputs themselves.**\n\n**Don't commit user-specific things (or passwords!)**\n:::\n\n. . .\n\n```{.default filename=\".gitignore\"}\n.Rproj.user\n.Rhistory\n.RData\n.Ruserdata\n\ndata/private-data.csv\noutput/*.png\nall_my_passwords.txt\n```\n\n## How to publish {.smaller}\n\n**Part 1: Get your project code on GitHub**\n\n::: {.incremental}\n1. Go to [github.com](https://github.com/) and create a free account.\n\n2. Add a `.gitignore` file to your website project with this:\n\n   ```{.default filename=\".gitignore\"}\n   .Rproj.user\n   .Rhistory\n   .RData\n   .Ruserdata\n\n   /_site/\n   ```\n\n3. Initialize a git repository for your website project.\n\n4. Commit the files and push to GitHub.\n\n\n:::\n\n## How to publish {.smaller}\n\n**Part 2: Tell Quarto to use GitHub Pages**\n\n::: {.incremental}\n5. Change the `output-dir` option in `_quarto.yml` to `docs`.\n\n   ```{.yaml code-line-numbers=\"false\" filename=\"_quarto.yml\"}\n   project:\n     type: website\n     output-dir: docs\n   ```\n\n6. Add an empty file named `.nojekyll` to the root of your website project (this tells GitHub to not run its own static site generator).\n\n7. Render your site.\n\n8. Commit the newly created `docs/` folder and `.nojekyll` file and push to GitHub.\n\n\n:::\n\n## How to publish {.smaller}\n\n**Part 3: Tell GitHub Pages to serve your site**\n\n::: {.incremental}\n9. From your GitHub repository, go to Settings \\> Pages and configure the repository to publish from the `docs` directory of your `main` branch.\n\n   ![](img/gh-pages-docs.png){fig-align=\"center\" width=\"60%\"}\n\n10. Wait for GitHub to build and deploy the site.\n\n\n:::\n\n\n## Other details\n\n- To update the site later, render the site, commit to GitHub, and wait for the site to rebuild.\n\n  Track the progress under the \"Actions\" section of your GitHub repository.\n\n- Add a custom domain at Settings \\> Pages\n\n\n## Your turn, part 1 {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5' .smaller}\n\n**Get your project code on GitHub**\n\n1. Go to [github.com](https://github.com/) and create a free account.\n\n2. Add a `.gitignore` file to your website project with this:\n\n   ```{.default filename=\".gitignore\"}\n   .Rproj.user\n   .Rhistory\n   .RData\n   .Ruserdata\n\n   /_site/\n   ```\n\n3. Initialize a git repository for your website project.\n\n4. Commit the files and push to GitHub.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_f05959ec\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Your turn, part 2 {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5' .smaller}\n\n**Tell Quarto to use GitHub Pages**\n\n5. Change the `output-dir` option in `_quarto.yml` to `docs`.\n\n   ```{.yaml code-line-numbers=\"false\" filename=\"_quarto.yml\"}\n   project:\n     type: website\n     output-dir: docs\n   ```\n\n6. Add an empty file named `.nojekyll` to the root of your website project (this tells GitHub to not run its own static site generator).\n\n7. Render your site.\n\n8. Commit the newly created `docs/` folder and `.nojekyll` file and push to GitHub.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_f2386be6\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Your turn, part 3 {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5' .smaller}\n\n**Tell GitHub Pages to serve your site**\n\n9. From your GitHub repository, go to Settings \\> Pages and configure the repository to publish from the `docs` directory of your `main` branch.\n\n   ![](img/gh-pages-docs.png){fig-align=\"center\" width=\"60%\"}\n\n10. Wait for GitHub to build and deploy the site.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_80dbef01\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# What's next? {background-color='{{< brand color yellow >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}\n\n## Course outline\n\n- ✅ ~~Intro to Quarto~~\n- ✅ ~~Creating basic websites~~\n- ✅ ~~Advanced website features~~\n- ✅ ~~Publishing~~\n- Customization and branding\n- Interactivity\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}