# Introduction<br>to Quarto {background-color='{{< brand color blue >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}

## {auto-animate="true"}

<center>

**Quarto is an...**

::: {.fragment .grow .semi-fade-out}
open-source
:::

::: {.fragment .grow .semi-fade-out}
scientific and technical
:::

::: {.fragment .grow .semi-fade-out}
publishing system
:::

::: {.fragment .grow .semi-fade-out}
built on Pandoc.
:::

</center>

## With Quarto…

…you can **weave** together **narrative** and **code** to produce elegantly formatted output such as documents, web pages, blog posts, books, dashboards, and more.

::: incremental
- Create dynamic content with Python, R, Julia, and Observable
- Edit documents in your favorite editor
- Publish technical content in HTML, PDF, Microsoft Word, and more
- Share content by publishing to the internet
:::

## Display data and results {.smaller}

[2024 Idaho election results](https://andrewheiss.github.io/election-desk/){preview-link="true"}, by Gabe Osterhout and Andrew Heiss

![](img/idaho-elections.png){fig-align="center" width="100%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}


## Walk through a story {.smaller}

[Council Housing & Neighborhood Income Inequality in Vienna](https://mschnetzer.github.io/scrollytell_gemeindebau/){preview-link="true"} by Tamara Premrov and Matthias Schnetzer (European Centre for Social Welfare Policy and Research, Austria)

<center><script src="https://fast.wistia.com/player.js" async></script><script src="https://fast.wistia.com/embed/izl69pu9ua.js" async type="module"></script><style>wistia-player[media-id='izl69pu9ua']:not(:defined) { background: center / contain no-repeat url('https://fast.wistia.com/embed/medias/izl69pu9ua/swatch'); display: block; filter: blur(5px); }</style> <wistia-player media-id="izl69pu9ua" aspect="1.7777777777777777" style="width: 800px;height: 463px;"></wistia-player></center>

::: notes
Posit recently held a Scrollytelling contest. You may have seen articles in newspapers like the New York Times that display visualizations as you scroll through the document. Quarto has an extension called Scrollytelling that lets you create these sorts of stories in Quarto. This one, from folks at the European Centre for Social Welfare Policy and Research which talked about Housing & Neighborhood Income Inequality in Vienna, was one of the winners.
:::

## Publish papers {.smaller}

::::: {.columns}
:::: {.column width="50%"}

[Navigating Hostility: The Effect of Nonprofit Transparency and Accountability on Donor Preferences in the Face of Shrinking Civic Space](https://stats.andrewheiss.com/silent-skywalk/notebook/manuscript.html){preview-link="true"} by Suparna Chaudhry, Marc Dotson, and Andrew Heiss
::::

:::: {.column width="10%"}
::::

:::: {.column width="40%"}

::: {.panel-tabset}
#### HTML

![](img/paper-html.png){style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

#### PDF

![](img/paper-pdf.png){style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

#### Word

![](img/paper-word.png){style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

:::

::::
:::::

## Share research {.smaller}

[Pandemic Pass? Treaty Derogations and Human Rights Practices During COVID-19](https://stats.andrewheiss.com/mountainous-mackerel/){preview-link="true"} by Suparna Chaudhry, Audrey Comstock, and Andrew Heiss

![](img/pandemic-pass.png){fig-align="center" width="100%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

## Teach classes {.smaller}

[Data Science for the Social Sciences](https://gov50-f23.github.io/){preview-link="true"}, Gov 50, Harvard University, taught by Matt Blackwell

![](img/harvard-gov50.png){fig-align="center" width="100%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

## Automate and reproduce your output {.smaller}

[Duplicating Quarto elements with code templates to reduce copy and paste errors](https://waterdata.usgs.gov/blog/quarto-template-demo/){preview-link="true"} by Althea A. Archer (United States Geological Survey)

![](img/quarto_template_overview.png){fig-align="center" width="40%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}

::: notes
With Quarto, you can create reports or presentations that update automatically when data changes or when you change inputs because you are creating your report with code. Use variables (parameters) to dynamically change parts of your analysis or report like to generate the same report for different regions, departments, or time periods, write reusable functions to avoid repeating code and keeps work cleaner, more consistent, and easier to maintain. The folks at United States Geological Survey have great blog posts on how they are implementing these ideas in Quarto.
:::

## Get your team on the same page {.smaller}

[We Converted Our Documentation to Quarto](https://melissavanbussel.quarto.pub/posit-conf-2023/#/section) by Melissa Van Bussel (Statistics Canada)

::::: {.columns}
:::: {.column width="80%"}

<iframe width="800" height="450" src="https://www.youtube.com/embed/zjPdBDyIyJ8?si=OIKzKvhMgzr77RFz" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>

::::

:::: {.column width="20%"}
* Website for R/Python User Group
* Training resources
* Presentations
::::
:::::

::: notes
And finally, Melissa van Bussel gave a talk on how the Statistics Canada team converted not just their documentation, but training resources, presentations, and more to Quarto to streamline efforts.
:::

## Gapminder Report

:::: {.columns}

::: {.column width="40%"}
![](img/gapminder-report.png){fig-align="center" width="100%" style="box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3); border-radius: 5px;"}
:::

::: {.column width="60%"}

This is what you'll work on today!
:::
::::


## "Literate programming"

![](img/literate-programming.png){fig-align="center" width="100%"}


## Why Quarto?

::: incremental
- Multilingual and independent of computational systems
- Quarto comes **"batteries included"** straight out of the box
- Consistent expression for core features
- Extension system
- Enable “single-source publishing”—create Word, PDFs, HTML, etc. from one source
- Use defaults that meet accessibility guidelines
:::


## Quarto formats {.smaller}

| Feature | Quarto |
|--------------------------|----------------------------------------------|
| Basic formats | [html](https://quarto.org/docs/output-formats/html-basics.html), [pdf](https://quarto.org/docs/output-formats/pdf-basics.html), [docx](https://quarto.org/docs/output-formats/ms-word.html), [typst](https://quarto.org/docs/output-formats/typst.html) |
| Beamer | [beamer](https://quarto.org/docs/presentations/beamer.html) |
| PowerPoint | [pptx](https://quarto.org/docs/presentations/powerpoint.html) |
| HTML slides | [revealjs](https://quarto.org/docs/presentations/revealjs/) |
| Advanced layout | [Quarto Article Layout](https://quarto.org/docs/authoring/article-layout.html) |
| Cross references | [Quarto Crossrefs](https://quarto.org/docs/authoring/cross-references.html) |
| Websites & blogs | [Quarto Websites](https://quarto.org/docs/websites/), [Quarto Blogs](https://quarto.org/docs/websites/website-blog.html) |
| Books | [Quarto Books](https://quarto.org/docs/books/) |
| Interactivity | [Quarto Interactive Documents](https://quarto.org/docs/interactive/shiny/) |
| Journal articles | [Journal Articles](https://quarto.org/docs/journals/index.html) |
| Dashboards | [Quarto Dashboards](https://quarto.org/docs/dashboards/) |

: {tbl-colwidths="\[25,75\]"}

## How it works {.smaller}

Quarto is a command line interface (**CLI**) that renders plain text formats (`.qmd`, `.rmd`, `.md`) OR mixed formats (`.ipynb`/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more.

. . .

```{bash}
#| eval: false
#| echo: true
#| code-line-numbers: "|1|10|15|16|18"

  Usage:   quarto 
  Version: 1.8.24

  Description:

    Quarto CLI

  Options:

    -h, --help     - Show this help.                            
    -V, --version  - Show the version number for this program.  

  Commands:

    render          [input] [args...]     - Render files or projects to various document types.
    preview         [file] [args...]      - Render and preview a document or website project.  
    serve           [input]               - Serve a Shiny interactive document.                
    create          [type] [commands...]  - Create a Quarto project or extension               
    create-project  [dir]                 - Create a project for rendering multiple documents  
    convert         <input>               - Convert documents to alternate representations.    
    pandoc          [args...]             - Run the version of Pandoc embedded within Quarto.  
    typst           [args...]             - Run the version of Typst embedded within Quarto.   
    run             [script] [args...]    - Run a TypeScript, R, Python, or Lua script.        
    add             <extension>           - Add an extension to this folder or project         
    install         [target...]           - Installs an extension or global dependency.        
    publish         [provider] [path]     - Publish a document or project to a provider.       
    check           [target]              - Verify correct functioning of Quarto installation. 
    help            [command]             - Show this help or the help of a sub-command.
```

## Under the hood

![](img/quarto-how-it-works.png){fig-align="center"}

- `jupyter` or `knitr` evaluates Python, Julia, R, or Observable code and returns a `.md` file along with the evaluated code
- Quarto applies Lua filters + CSS/LaTeX which is then evaluated alongside the `.md` file by Pandoc and converted to a final output format

::: footer
Illustration by Allison Horst
:::

## Environment options {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}

You have a couple options for following along today:

::: incremental
1. **Posit Cloud** (RStudio in the cloud)
2. **Local installation** (RStudio, Positron, or VS Code on your computer)
:::

## Your turn {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}

Go to the course website and click on `Setup` in the sidebar.

<br>

<center>[andhs.co/quarto-websites-2025](https://andhs.co/quarto-websites-2025){style="font-size: 1.3em"}</center>

<br>

Follow the instructions for either Option 1 or Option 2.

```{r}
#| label: intro-clock1
#| echo: false
# 5 minutes, warning at 1 minute
countdown::countdown(minutes = 5, seconds = 0, play_sound = TRUE, warn_when = 1 * 60)
```

## Quarto workflow

:::: {.columns}
::: {.column width="50%"}

- Open a `.qmd` file.
- Preview/render the document.
- Make a change and preview/render again.

:::

::: {.column width="50%"}
![](img/cycle-0.svg)
:::
::::


## Render/preview

:::::::::::: panel-tabset
## RStudio

::::: columns
::: column
{{< fa brands apple >}}&ensp; <kbd title="Command-Shift-K" aria-hidden="true" class="kbd mac">⌘⇧K</kbd>

{{< fa brands windows >}}&ensp;<kbd title="Ctrl-Shift-K" aria-hidden="true" class="kbd">Ctrl + Shift + K</kbd>
:::

::: column
![](img/render-rstudio.png)
:::
:::::

## Positron&thinsp;/&thinsp;VS Code

::::: columns
::: column
{{< fa brands apple >}}&ensp; <kbd title="Command-Shift-K" aria-hidden="true" class="kbd mac">⌘⇧K</kbd>

{{< fa brands windows >}}&ensp;<kbd title="Ctrl-Shift-K" aria-hidden="true" class="kbd">Ctrl + Shift + K</kbd>
:::

::: column
![](img/render-positron.png)
:::
:::::

[Requires [Quarto Extension](https://marketplace.visualstudio.com/items?itemName=quarto.quarto) for VS Code]{style="font-size: 0.7em"}

## Terminal

``` {.default filename="Terminal"}
quarto preview 01-exercise.qmd
```

::::::::::::


## Your turn {background-color='{{< brand color cyan >}}' background-image='../../img/background-hex-shapes.svg' background-opacity='0.5'}

{{< include _your-turn_qmd1.qmd >}}

```{r}
#| label: intro-clock2
#| echo: false
# 5 minutes, warning at 1 minute
countdown::countdown(minutes = 5)
```
